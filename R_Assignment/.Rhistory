}
x<-y
while(mph<f){
gen <- gen + 1
y<-as.numeric(x[90,1,]>0)
y<-cbind(y,1:length(y))
y<-as.data.frame(y)
names(y)[1:2]<-c("IA","pos")
y<-subset(y,IA!=0)
x<-x[,,c(y$pos)]
markers<-x[mks,,]
select<-cbind(c(1:dim(markers)[3]),colSums(markers[,1,]))
select<-select[order(select[,2], decreasing = T),]
final<-x[,,select[,1]]
rpms<-markers[,,select[1:rps,1]]
ct<-final
vec<-array(0,c)
vec[]<-floor(pop/c)
et<-cumsum(vec)
check1<-array(1,pop-et[length(vec)])
check2<-array(0,length(et)-length(check1))
zw<-c(check1,check2) + vec
vec<-zw  #OK
n = dim(x1)[1]
qs<-array(0,dim=c(loci,2,1))
for (j in 1:c){
y<-array(0,dim=c(n,2,vec[j]))
x1<-ct[,,j]
for (i in 1:vec[j]) {
p1<-cumsum(runif(n)<=rr)%%2
p2<-cumsum(runif(n)<=rr)%%2
y[p1==0,1,i]=x1[p1==0,1]
y[p1==1,1,i] = x1[p1==1,2]
y[p2==0,2,i] = x2[p2==0,1]
y[p2==1,2,i] = x2[p2==1,2]
}  #OK
qs<-abind(qs,y,along=3)
}    #OK
x<-qs[,,-1]
if (c>1){
mph<-sum(rpms)/(dim(rpms)[3]*dim(rpms)[2]*dim(rpms)[1])
}
else{
mph<-sum(rpms)/(dim(rpms)[1]*dim(rpms)[2])
}
mph
}
genfx[gen]<-genfx[gen]+1
gsim[v]<-gen
NRPg[v]<- 1-sum(1-final)/(3599*dim(final)[3])
LDS[v]<-(1-(sum(final[80:89,1,])+sum(final[91:100,1,]))/(20*pop))*20
}
zx<-cbind(NRPg,gsim)
zx<-zx[order(zx[,2],decreasing=TRUE),]
mz<-max(zx[,2])
cnt<-array(0,c(mz,2))
dd<-zx[,1]>0.966
zx<-cbind(zx,dd)
for (j in 1:mz){
for (i in 1:dim(zx)[1]){
if (zx[i,2]==j){
cnt[j,1]<-cnt[j,1]+1
if (zx[i,1]>0.966){
cnt[j,2]<-cnt[j,2]+1
}  #OK
}  #OK
}  #OK
}  #OK
pq<-cbind(cnt[,2]/cnt[,1],1:dim(cnt)[1])
pq<-as.data.frame(pq)
names(pq)[1:2]<-c("freq","generation")
pq[is.na(pq)]<-0    ####
ds<- cbind(array(0,c(dim(pq)[1],1)),c(1:dim(pq)[1])) ######
eg<-as.data.frame(cbind(NRPg,gsim))
names(eg)[1:2]<-c("% RP Recovery","generation")
wy<- as.data.frame(cbind(genfx/sim,1:length(genfx)))
for(i in 1:dim(pq)[1]){           #########
ds[i,1]<-wy[i,1]*pq[i,1]      #########
}
ds<-as.data.frame(ds)
names(ds)[1:2]<-c("p","generation")  #######
names(wy)[1:2]<-c("p","generation")  #######
z<-array(0,dim=c(length(genfx),1))############
for ( i in length(genfx):1){
if (genfx[i]>0){z[i]<-length(genfx[1:i])}
}   ##################
barplot(genfx[1:max(z)]/sim,main = "Finishing Generation Histogram",xlab="Generation",ylab="Frequency",col=c("red","green","blue","gray","orange","violet","yellow"),names.arg=c(1:length(genfx[1:max(z)])),beside=T)
io<-list(wy,ds) #############
names(io)<-c("p(finishing)","p(success)") ###############
return(io)
}
int1
int1(100,5,100,5,0.96)
int1(100,5,100,5,0.20)
int1(100,5,100,5,0.50)
int1(100,5,100,5,0.80)
int1(100,5,100,5,0.99)
int1(400,4,200,50,0.966)
int1(400,4,200,2000,0.966)
q()
Noelle_02292016 <- read.delim("C:/Users/Paulotyama/Desktop/Noelle_02292016.xlsx", quote="")
View(Noelle_02292016)
head(Noelle_02292016)
library(xlsx)
install.packages("xlsx")
library("xlsx")
xlsx()
xlsxjars::
head("Noelle_02292016")
Noelle_02292016 <- read.csv("C:/Users/Paulotyama/Desktop/Noelle_02292016.xlsx", dec=",")
View(Noelle_02292016)
Noelle_02292016 <- read.xlsx("C:/Users/Paulotyama/Desktop/Noelle_02292016.xlsx", sheetName = "sheet1")
Noelle_02292016 <- read.xlsx("C:/Users/Paulotyama/Desktop/Noelle_02292016.xlsx", sheetName = "sheet1")
install.packages("dplyer")
q()
head(10, MiniCore)
MiniCore <- read.delim("C:/Users/Paulotyama/Desktop/MiniCore.hap", header=FALSE)
View(MiniCore)
install.packages("devtools")
library(devtools)
install_github('royfrancis/pophelper')
library(pophelper)
library(pophelper)
library(pophelper)
install.packages("devtools")
install.packages("devtools")
library("devtools", lib.loc="~/R/win-library/3.2")
library(pophelper)
install.packages("royfrancis/pophelper")
install.packages('devtools',dep=T)
library(devtools)
install_github('royfrancis/pophelper')
library(pophelper)
packageDescription("pophelper", fields = "Version")
library("devtools", lib.loc="~/R/win-library/3.2")
library(devtools)
library(multtest)
library("gplots")
library("LDheatmap")
library("genetics")
library("compiler") #this library is already installed in R
library(multtest)
library("gplots")
library("LDheatmap")
library("genetics")
library("compiler") #this library is already installed in R
source("http://www.maizegenetics.net/images/stories/bioinformatics/GAPIT/gapit_functions.txt")
source("http://www.maizegenetics.net/images/stories/bioinformatics/GAPIT/emma.txt")
source("http://www.maizegenetics.net/images/stories/bioinformatics/GAPIT/gapit_functions.txt")
a
Update all/some/none? [a/s/n]: a
source("http://zzlab.net/GAPIT/emma.txt")
source("http://zzlab.net/GAPIT/gapit_functions.txt")
pheno<-read.table("K:\\GAPIT\\protein.txt",header=T)
str(pheno) # gives us information on the object, in this case a data frame and other information
file.choose()
View(GAPIT.replaceNaN)
a
source('C:/Users/Paulotyama/Desktop/Code for GAPIT webinar (1).R - 1/Code for GAPIT webinar (1).R')
source('C:/Users/Paulotyama/Desktop/Code for GAPIT webinar (1).R - 1/Code for GAPIT webinar (1).R')
source('C:/Users/Paulotyama/Desktop/Code for GAPIT webinar (1).R - 1/Code for GAPIT webinar (1).R')
source('C:/Users/Paulotyama/Desktop/Code for GAPIT webinar (1).R - 1/Code for GAPIT webinar (1).R')
source('C:/Users/Paulotyama/Desktop/Code for GAPIT webinar (1).R - 1/Code for GAPIT webinar (1).R')
x <- 100
x <- x + 1 #notice how RStudio updates its description of x on the top right tab
x
1:20
x
x
x <- 1:100
x
2^x
ls ()
_age <-  4
.mass <- 3
min_height
max.height
_age <-  4
.mass <- 3
MaxLength
min-length
2widths
celsius2kelvin
library(ggplot2)
library(plyr)
library(gapminder)
install.packages("gapminder")
library(gapminder)
?gapminder
library(dplyr)
?`plyr-package`
source(https://bioconductor.org/biocLite.R)
http:// if https:// URLs are not supported
source("https://bioconductor.org/biocLite.R")
biocLite()
biocLite()
install.packages(bigmemory)
install.packages("bigmemory")
install.packages("biganalytics")
library (bigmemory)
library(biganalytics)
library(MASS) # required for ginv
library(multtest)
library(gplots)
library(compiler) #required for cmpfun
library(scatterplot3d)
source(http:"//zzlab.net/GAPIT/emma.txt")
d$GC.binned <- cut(d$percent.GC, 5)
d <- read.csv("https://raw.githubusercontent.com/vsbuffalo/bds-files/master/chapter-08-r/Dataset_S1.txt")
d$GC.binned <- cut(d$percent.GC, 5)
d_split <- split(d$depth, d$GC.binned)
d$GC.binned <- cut(d$percent.GC,5)
percent.GC
A <- percent.GC
d$GC.binned <- cut(d$percent.GC, 5)
colnames(d)[12] <- percent.GC
colnames(d)[12] <- "percent.GC"
d$GC.binned <- cut(d$percent.GC, 5)
d_split <- split(d$depth, d$GC.binned)
str(d_split)
lapply(d_split, mean)
library("dplyr", lib.loc="~/R/win-library/3.3")
d_df <- tbl_df(d)
d_df
source(http:"//zzlab.net/GAPIT/gapit_functions.txt")
source(http:"//zzlab.net/FarmCPU/FarmCPU_functions.txt")
source("http://zzlab.net/GAPIT/emma.txt")
source("http://zzlab.net/GAPIT/gapit_functions.txt")
source("http://zzlab.net/FarmCPU/FarmCPU_functions.txt")
select(d_df, start, end, Pi, Recombination, depth) #equivalent to d[, c("start", "end", "Pi", "Recombination", "depth")]
filter(d_df, Pi > 16, percent.GC > 80) #equivalent to d[d$Pi > 16 & d$percent.GC > 80, ]
arrange(d_df, depth) #equivalent to `d[order(d$depth), ]`
d_df %>%  mutate(GC.scaled = scale(percent.GC)) %>%
filter(GC.scaled > 4, depth > 4) %>%
select(start, end, depth, GC.scaled, percent.GC) %>%
arrange(desc(depth))
mtfs <- read.delim("https://raw.githubusercontent.com/vsbuffalo/bds-files/master/chapter-08-r/motif_recombrates.txt", header=TRUE)
mtfs_df <- tbl_df(mtfs)
mtfs_df %>% group_by(chr)
mtfs_df %>%
group_by(chr) %>%
summarize(max_recom = max(recom), mean_recom = mean(recom), num=n())
mtfs_df %>%
group_by(chr) %>%
summarize(max_recom = max(recom), mean_recom = mean(recom), num=n())
mtfs_df %>%
group_by(chr) %>%
summarize(max_recom = max(recom), mean_recom = mean(recom), num=n()) %>% ggplot() geom_histogram()
x <- rpois(1, lambda=8)
x
x <- rpois(10, lambda=8)
x
source('C:/Users/Paulotyama/Desktop/Tocopherol/TocoFarmCPU.R')
install.packages("bigmemory")
library (bigmemory)
library(biganalytics)
library(MASS) # required for ginv
library(multtest)
library(gplots)
library(compiler) #required for cmpfun
library(scatterplot3d)
source('C:/Users/Paulotyama/Desktop/BCB546X-Spring2016/Week_6/R.in.class.R')
source('C:/Users/Paulotyama/Desktop/Tocopherol/TocoFarmCPU.R')
source("https://bioconductor.org/biocLite.R")
biocLite()
source("https://bioconductor.org/biocLite.R")
biocLite()
warnings()
debug(available.packages);biocLite()
debug(available.packages);biocLite()
debug(available.packages);biocLite()
?biocLite
biocLite(ask=TRUE)
source("https://bioconductor.org/biocLite.R")
biocLite(ask=TRUE)
source("http://bioconductor.org/biocLite.R")
biocLite(ask=TRUE)
source("https://bioconductor.org/biocLite.R")
source("https://bioconductor.org/biocLite.R")
biocLite(NULL)
plot(cars)
setwd("/users/Paulotyama/Desktop/BCB546X-Spring2016/R_Assignment")
setwd("/users/Paulotyama/Desktop/BCB546X-Spring2016/R_Assignment")
genotypes <- read.table(file="fang_et_al_genotypes.txt",header=T)
head(genotypes)
dim(genotypes)
typeof()
typeof(genotypes)
length(genotypes)
nrows(genotypes)
attributes(genotypes)
names(genotypes)
class(genotypes)
attr(genotypes, "names")
attr(genotypes, "class")
str(genotypes)
head(genotypes)
setwd("/users/Paulotyama/Desktop/BCB546X-Spring2016/R_Assignment")
genotypes <- read.table(file="fang_et_al_genotypes.txt",sep="\t",header=T)
head(genotypes)
dim(genotypes)#2782  986
length(genotypes)#986
attributes(genotypes)
class(genotypes)#data.frame
str(genotypes)#d
snps <- read.table(file="snp_position.txt",sep="\t",header=T)
dim(snps)
length(snps)
class(snps)
str(snps)
Z_mays <- genotypes[which(genotypes$Group %in% c(ZMMIL, ZMMMR, ZMMLR)),]
Z_mays <- genotypes[which(genotypes$Group %in% c(ZMMIL, ZMMMR, ZMMLR)),]
library(dplyr)
Z_mays <- genotypes[which(genotypes$Group %in% c(ZMMIL, ZMMMR, ZMMLR)),]
Z_mays <- genotypes[which(genotypes$Group %in% c("ZMMIL", "ZMMMR", "ZMMLR")),]
head (Z_mays)
teosinte <- genotypes[which(genotypes$Group %in% c("ZMPBA", "ZMPIL", "ZMPJA")),]
head(teosinte)
genTable <- table(genotypes$Group)
genTable <- plyr::ldply(genTable, rbind)
genTableMaize <- genTable[which(genTable$.id=="ZMMIL" |genTable$.id=="ZMMLR" | genTable$.id=="ZMMMR"),]
sum(genTableMaize$'1')
dim(Z_mays)
transposed_Z_mays <- t(Z_mays)
transposed_teosinte <-t(teosinte)
snp_pos <- snps[,c(1,3,4)]
head(snp_pos)
head (Z_mays)
Z.mays <- [-c(1,2,3),]
Z.mays <- transposed_Z_mays[-c(1,2,3),]
Teo <- transposed_teosinte[-c(1,2,3),]
joined_teosinte <-
joined_Zmays <- bind_cols(positions3,Z.mays)
joined_teosinte <-
joined_Zmays <- bind_cols(position3,Z.mays)
joined_teosinte <-
joined_Zmays <- bind_cols(Position(3),Z.mays)
head(5,Z.mays)
head(Z.mays)
head(transposed_Z_mays)
Z.mays <- transposed_Z_mays[,c(-1,-2,-3),]
Z.mays <- Z_mays[,c(-1,-2,-3),]
Teo <- teosinte[,c(-1,-2,-3),]
transposed_Z_mays <- t(Z.mays)
transposed_teosinte <-t(Teo)
joined_teosinte <-
joined_Zmays <- bind_cols(Position(3),Z.mays)
joined_teosinte <-
joined_Zmays <- bind_cols(positions3,Z.mays)
joined_teosinte <-
joined_Zmays <- bind_cols(positions3,transposed_Z_mays)
transposed_Z_mays <- t(Z_mays)
transposed_teosinte <-t(teosinte)
transposed_Z_mays <- t(Z_mays)
transposed_teosinte <-t(teosinte)
Z.mays <- transposed_Z_mays[,c(-1,-2,-3),]
Z.mays <- transposed_Z_mays[,-c(1,2,3),]
Z.mays <- transposed_Z_mays[-c(1,2,3),]
Teo <- transposed_teosinte[,c(-1,-2,-3),]
Teo <- transposed_teosinte[c(-1,-2,-3),]
Z.mays <- tbl_df(transposed_Z_mays)
Teo <- tbl_df(transposed_teosinte)
Z.mays <- transposed_Z_mays[-c(1,2,3),]
Z.mays <- Z.mays[-c(1,2,3),]
Teo <-Teo[c(-1,-2,-3),]
joined_teosinte <-
joined_Zmays <- bind_cols(positions3,Z.mays)
snp_pos$Position <- as.numeric(as.character(snp_pos$Position))
snp_pos$Chromosome <- as.numeric(as.character(snp_pos$Chromosome))
maize <- Z_mays[-c(1,2,3),]
transposed_Z_mays <- t(maize)
Z.mays <- cbind(rownames(transposed_Z_mays),transposed_Z_mays)
rownames(Z.mays) <- NULL
colnames(Z.mays) <- Z.mays[1,]
Z.mays <- as.data.frame(Z.mays)
colnames(Z.mays)[1] <- "SNP_ID"
joined_Z.mays <- merge(snp_pos,Z.mays, by = "SNP_ID")
transposed_teosinte <-t(Teo)
Z.mays <- cbind(rownames(transposed_teosinte),transposed_teosinte)
rownames(Z.mays) <- NULL
Teosinte <- cbind(rownames(transposed_teosinte),transposed_teosinte)
rownames(Teosinte) <- NULL
colnames(Teosinte) <- Teosinte[1,]
Teosinte <- as.data.frame(Teosinte)
colnames(Teosinte)[1] <- "SNP_ID"
joined_Z.mays <- merge(snp_pos,Teosinte, by = "SNP_ID")
joined_teosinte <- merge(snp_pos,Teosinte, by = "SNP_ID")
acend.Z.mays <- joined_Z.mays[order(joined_Z.mays$Chromosome, joined_Z.mays$Position),]
ascend.teosinte <- joined_teosinte [order(joined_teosinte $Chromosome), joined_teosinte $Position),]
ascend.teosinte <- joined_teosinte [order(joined_teosinte $Chromosome), joined_teosinte$Position),]
ascend.teosinte <- joined_teosinte [order(joined_teosinte$Chromosome), joined_teosinte$Position),]
ascend.teosinte <- joined_teosinte [order(joined_teosinte$Chromosome, joined_teosinte$Position),]
descend.Z.mays <- joined_Z.mays[order(joined_Z.mays$Chromosome, -joined_Z.mays$Position),]
descend.teosinte <- joined_teosinte [order(joined_teosinte$Chromosome, -joined_teosinte$Position),]
for(i in 1:10){temp_df<-acend.Z.mays[acend.Z.mays[,2]==i,] temp_df[temp_df=="-/-"]<-"?/?" write.csv(temp_df,paste("Z_mays_chrom"i".csv,sep=""),row.names=F)}
for(i in 1:10){temp_df<-acend.Z.mays[acend.Z.mays[,2]==i,]temp_df[temp_df=="-/-"]<-"?/?" write.csv(temp_df,paste("Z_mays_chrom"i".csv,sep=""),row.names=F)}
for(i in 1:10){
temp_df<-acend.Z.mays[acend.Z.mays[,2]==i,]
temp_df[temp_df=="-/-"]<-"?/?" write.csv(temp_df,paste("Z_mays_chrom"i".csv,sep=""),row.names=F)
}
for(i in 1:10){
temp_df<-descend.Z.mays[descend.Z.mays[,2]==i,]
temp_df[temp_df=="-/-"]<-"?/?"
write.csv(temp_df,paste("teosinte_chrom"i".desc.csv,sep""),row.names=F)
}
for(i in 1:10){
temp_df<-descend.Z.mays[descend.Z.mays[,2]==i,]
temp_df[temp_df=="-/-"]<-"?/?"
write.csv(temp_df,paste("teosinte_chrom"i".desc.csv,sep""),row.names=F)
}
for(i in 1:10) {
temp_df<-descend.Z.mays[descend.Z.mays[,2]==i,]
temp_df[temp_df=="-/-"]<-"?/?"
write.csv(temp_df,paste("teosinte_chrom"i".desc.csv,sep""),row.names=F)
}
for(i in 1:10){
temp_df<-acend.Z.mays[acend.Z.mays[,2]==i,]
temp_df[temp_df=="-/-"]<-"?/?" write.csv(temp_df,paste("Z_mays_chrom",i,".csv,sep=""),row.names=F)
}
for(i in 1:10){
temp_df<-acend.Z.mays[acend.Z.mays[,2]==i,]
temp_df[temp_df=="-/-"]<-"?/?" write.csv(temp_df,paste("Z_mays_chrom"i".csv,sep=""),row.names=F)
}
library(ggplot2)
summarise?
y
summarise?
dplyr
head(acend.Z.mays)
for(i in 1:10){
temp_df<-acend.Z.mays[acend.Z.mays$Position==i,]
temp_df[temp_df=="-/-"]<-"?/?" write.csv(temp_df,paste("Z_mays_chrom"i".csv,sep=""),row.names=F)
}
library(reshape2)
tidy_genotypes <- genotypes[,-2]
tidy_genotypes <- melt(tidy_genotypes, id=c("Sample_ID", "Group"))
colnames(tidy_genotypes)[3:4] <- c("SNP_ID","SNP_call")
combined.tidy <- merge(snp_pos,tidy_genotypes, by = "SNP_ID")
convert <- function(x) {
if (x = "A/A" | x = "C/C" | x = "T/T" | x = "G/G") {
return(x)
}
else if (x == "?/?") {
return("N")
}
else {return("H")}
}
combined.tidy$Converted <- lapply(tidy_genotypes$SNP_call,convert)
combined.tidy$Converted <- lapply(tidy_genotypes$SNP_call,Converted)
combined.tidy$Converted <- lapply(tidy_genotypes$SNP_call,convert)
library(tidyr)
combined.tidy$Converted <- lapply(tidy_genotypes$SNP_call,convert)
convert <- function(x) {
if (x = "A/A" | x = "C/C" | x = "T/T" | x = "G/G") {
return(x)
}
else if (x == "?/?") {
return("N")
}
else {return("H")}
}
combined.tidy$Converted <- lapply(tidy_genotypes$SNP_call,convert)
combined.tidy$Converted <- lapply(tidy_genotypes$SNP_call,convert)
for(i in 1:10){
temp_df<-acend.Z.mays[acend.Z.mays==[,2]i,]
temp_df[temp_df=="-/-"]<-"?/?" write.csv(temp_df,paste("Z_mays_chrom"i".csv,sep=""),row.names=F)
}
for(i in 1:10){
temp_df<-acend.Z.mays[acend.Z.mays==[[,2]i,]
temp_df[temp_df=="-/-"]<-"?/?" write.csv(temp_df,paste("Z_mays_chrom"i".csv,sep=""),row.names=F)
}
for(i in 1:10){
temp_df<-acend.Z.mays[acend.Z.mays==[[,2]i,]
temp_df[temp_df=="-/-"]<-"?/?"
write.csv(temp_df,paste("Z_mays_chrom"i),csv.sep=""),row.names=F)
}
for(i in 1:10){
temp_df<-acend.Z.mays[acend.Z.mays==[[,2]i,]
temp_df[temp_df=="-/-"]<-"?/?"
write.csv(temp_df,paste("Z_mays_chrom",i),csv.sep=""),row.names=F)
}
for(i in 1:10){
temp_df<-acend.Z.mays[acend.Z.mays==[[,2]i,]
temp_df[temp_df=="-/-"]<-"?/?"
write.csv(temp_df,paste("Z_mays_chrom",i),csv.sep="",row.names=F)
}
for(i in 1:10){
temp_df<-acend.Z.mays[acend.Z.mays==[[,2]i,]
temp_df[temp_df=="-/-"]<-"?/?"
write.csv(temp_df,paste("Z_mays_chrom",i),sep=" ",row.names=F)
}
for(i in 1:10){
temp_df<-acend.Z.mays[acend.Z.mays==[[,2]i,]
temp_df[temp_df=="-/-"]<-"?/?"
write.csv(temp_df,paste("Z_mays_chrom",i),row.names=F)
}
for(i in 1:10){
temp_df<-acend.Z.mays[acend.Z.mays==[,2]i,]
temp_df[temp_df=="-/-"]<-"?/?"
write.csv(temp_df,paste("Z_mays_chrom",i),row.names=F)
}
clear
clear()
View(acend.Z.mays)
joined_Z.mays <- merge(snp_pos,Z.mays, by = "SNP_ID")
joined_Z.mays[joined_Z.mays == "unknown"] <- NA
maize <- Z_mays[-c(1,2,3),]
transposed_Z_mays <- t(maize)
Z.mays <- cbind(rownames(transposed_Z_mays),transposed_Z_mays)
colnames(Z.mays)[2] <- "SNP_ID"
joined_Z.mays <- merge(snp_pos,Z.mays, by = "SNP_ID")
source('C:/Users/Paulotyama/Desktop/BCB546X-Spring2016/R_Assignment/R_Assignment.BCB546X.R')
